services:
  vpn:
    image: dperson/openvpn-client:latest
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ${CONFIG}/vpn:/vpn
    ports:
      - 8112:8112 # deluge
      - 6881:6881 # deluge
      - 6881:6881/udp # deluge
      - 9696:9696 # prowlerr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8787:8787 # readarr
    cap_add:
      - net_admin
    security_opt:
      - label:disable
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    command: '-f "" -r 192.168.1.0/24'
  deluge:
    image: linuxserver/deluge:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/deluge:/config
      - ${DOWNLOADS}:/downloads
    network_mode: service:vpn
    depends_on:
      - vpn
  prowlarr:
    image: linuxserver/prowlarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG}/prowlarr:/config
    network_mode: service:vpn
    depends_on:
      - vpn
  radarr:
    image: linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG}/radarr:/config
      - ${DOWNLOADS}:/downloads
      - ${MEDIA}/movies:/movies
    network_mode: service:vpn
    depends_on:
      - vpn
      - deluge
      - prowlarr
  sonarr:
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG}/sonarr:/config
      - ${DOWNLOADS}:/downloads
      - ${MEDIA}/series:/series
    network_mode: service:vpn
    depends_on:
      - vpn
      - deluge
      - prowlarr
  plex:
    image: linuxserver/plex:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - VERSION=latest
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIG}/plex/db:/config
      - ${CONFIG}/plex/transcode:/transcode
      - ${MEDIA}:/data
    ports:
      - 32400:32400
      # - 1900:1900/udp
      # - 3005:3005
      # - 5353:5353/udp
      # - 8324:8324
      # - 32410:32410/udp
      # - 32412:32412/udp
      # - 32413:32413/udp
      # - 32414:32414/udp
      # - 32469:32469
  unifi-controller:
    image: linuxserver/unifi-controller:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Etc/UTC
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - ${CONFIG}/unifi-controller:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      # - 1900:1900/udp #optional
      # - 8843:8843 #optional
      # - 8880:8880 #optional
      # - 6789:6789 #optional
      # - 5514:5514/udp #optional
    restart: unless-stopped
  filebrowser:
    image: filebrowser/filebrowser:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}:/srv/config
      - ${CONFIG}/filebrowser:/config
      - ${DOWNLOADS}:/srv/downloads
      - ${MEDIA}:/srv/media
    ports:
      - 8080:80
  dashy:
    image: lissy93/dashy
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - UID=${PUID}
      - GID=${PGID}
    volumes:
      - ${CONFIG}/dashy/config.yml:/app/public/conf.yml
    ports:
      - 4000:80
    healthcheck:
      test: [ 'CMD', 'node', '/app/services/healthcheck' ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # caddy:
  #   image: caddy:latest
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #     - 443:443/udp
  #   volumes:
  #     - ${CONFIG}/Caddy/Caddyfile:/etc/caddy/Caddyfile
  #     - $PWD/site:/srv
  #     - ${CONFIG}/caddy_data:/data
  #     - ${CONFIG}caddy_config:/config
  # pihole:
  #   image: pihole/pihole:latest
  #   # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #     - "80:80/tcp"
  #   environment:
  #     TZ: ${TZ}
  #     WEBPASSWORD: 'sheppard'
  #     # Volumes store your data between container upgrades
  #   volumes:
  #     - ${CONFIG}/pihole/etc-pihole:/etc/pihole
  #     - ${CONFIG}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
  #   restart: unless-stopped
  # readarr:
  #   image: cr.hotio.dev/hotio/readarr
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG}/readarr:/config
  #     - ${DOWNLOADS}:/downloads
  #     - ${MEDIA}/books:/books
  #   network_mode: service:vpn
  #   depends_on:
  #     - vpn
  #     - deluge
  #     - prowlarr
  # jellyfin:
  #   image: linuxserver/jellyfin:latest
  #   restart: unless-stopped
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG}/jellyfin:/config
  #     - ${MEDIA}/movies:/data/movies
  #     - ${MEDIA}/series:/data/series
  #   ports:
  #     - 8096:8096
  #     - 8920:8920
  #     - 7359:7359/udp
  #     - 1900:1900/udp
